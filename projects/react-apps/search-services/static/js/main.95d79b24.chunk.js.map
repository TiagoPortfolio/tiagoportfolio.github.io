{"version":3,"sources":["components/SubscriptionsList.js","components/App.js","components/AppsList.js","components/Pagination.js","components/SearchBar.js","components/Categories.js","containers/AppsListContainer.js","App.js","serviceWorker.js","index.js"],"names":["SubscriptionsList","props","list","subscriptions","map","subscription","index","react_default","a","createElement","key","name","price","Fragment","toFixed","App","app","categories","category","reduce","prev","curr","className","description","components_SubscriptionsList","AppsList","apps","page","pageLimit","slice","id","components_App","Pagination","_this$props","this","totalApps","changePage","totalPages","Math","ceil","pages","_loop","i","href","onClick","Component","SearchBar","type","placeholder","onChange","searchApp","CATEGORIES","Categories","currentCategory","filterCategory","AppsListContainer","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleCategoryFilter","setState","state","appsFound","filter","toLowerCase","includes","appSearchTerm","handleAppSearch","e","searchTerm","target","value","handlePagination","bind","assertThisInitialized","_this2","fetch","then","response","json","data","_this$state","components_Categories","SearchBar_SearchBar","components_AppsList","Pagination_Pagination","length","containers_AppsListContainer","ReactDOM","render","src_App_App","document","getElementById","Boolean","window","location","hostname","match","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.95d79b24.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SubscriptionsList = props => {\r\n  const list = props.subscriptions.map((subscription, index) => {\r\n    return (\r\n      <li key={index}>\r\n        <span>{subscription.name}</span>\r\n        <h3>\r\n          {!subscription.price ? (\r\n            <React.Fragment>\r\n              {'Free'}<sup />\r\n            </React.Fragment>\r\n          ) : (\r\n            <React.Fragment>\r\n              {(subscription.price / 100).toFixed(2)}<sup>€</sup>\r\n            </React.Fragment>\r\n          )}\r\n        </h3>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return <ul>{list}</ul>;\r\n};\r\n\r\nexport default SubscriptionsList;\r\n// [(subscription.price / 100).toFixed(2), <sup>€</sup>]\r\n","import React from 'react';\r\nimport SubscriptionsList from './SubscriptionsList';\r\n\r\nconst App = props => {\r\n  const { app } = props;\r\n  const categories = app.categories\r\n    .map((category, index) => <span key={index}>{category}</span>)\r\n    .reduce((prev, curr) => [prev, ' / ', curr]);\r\n\r\n  return (\r\n    <div className=\"app-item\">\r\n      <div className=\"box-info\">\r\n        <div className=\"box-info--content\">\r\n          <div className=\"description\">\r\n            <h1>{app.name}</h1>\r\n            <p>{app.description}</p>\r\n          </div>\r\n          <div className=\"tags\">{categories}</div>\r\n        </div>\r\n        <div className=\"box-info--footer\">\r\n          <SubscriptionsList subscriptions={app.subscriptions} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport App from './App';\r\n\r\nconst AppsList = props => {\r\n  const {apps, page, pageLimit} = props;\r\n\r\n  // Get apps in a specific page\r\n  const pagedApps = apps.slice((page - 1) * pageLimit, page * pageLimit);\r\n\r\n  const list = pagedApps.map(app => (\r\n    <li key={app.id}>\r\n      <App app={app} />\r\n    </li>\r\n  ));\r\n\r\n  return <ul>{list}</ul>;\r\n};\r\n\r\nexport default AppsList;\r\n","import React, {Component} from 'react';\r\n\r\nexport default class Pagination extends Component {\r\n\r\n  render() {\r\n    const { page, pageLimit, totalApps, changePage } = this.props;\r\n    const totalPages = Math.ceil(totalApps / pageLimit);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= totalPages; i++) {\r\n      pages[i] =\r\n        <li key={i} className={i === page ? 'active' : ''}>\r\n          <a href=\"#\" onClick={() => changePage(i)}>{i}</a>\r\n        </li>\r\n    }\r\n\r\n    return (\r\n      <ul className=\"pagination\">\r\n        <li className={page === 1 ? 'hide' : ''}>\r\n          <a href=\"#\" onClick={() => changePage(page - 1)}>&lt;</a>\r\n        </li>\r\n        {pages}\r\n        <li className={page === totalPages ? 'hide' : ''}>\r\n          <a href=\"#\" onClick={() => changePage(page + 1)}>&gt;</a>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class SearchBar extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <input type=\"text\" placeholder=\"Search by App\" onChange={this.props.searchApp}/>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst CATEGORIES = [\r\n  'Channels',\r\n  'Dialer',\r\n  'Management',\r\n  'Optimization',\r\n  'Productivity',\r\n  'Reporting',\r\n  'Voice Analytics'\r\n];\r\n\r\nconst Categories = props => (\r\n  <nav className=\"nav-categories\">\r\n    <h2>Categories</h2>\r\n    <ul className=\"nav-menu\">\r\n      {CATEGORIES.map((category, index) => (\r\n        <li\r\n          key={index}\r\n          className={props.currentCategory === category ? 'active' : ''}\r\n        >\r\n          <a href=\"#\" onClick={() => props.filterCategory(category)}>\r\n            {category}\r\n          </a>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Categories;\r\n","import React, {Component} from 'react';\r\nimport AppsList from '../components/AppsList';\r\nimport Pagination from '../components/Pagination';\r\nimport SearchBar from '../components/SearchBar';\r\nimport Categories from '../components/Categories';\r\n\r\nconst PAGE_LIMIT = 3;\r\n\r\nclass AppsListContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      apps: [], // Original apps list\r\n      appsFound: [], // Filtered apps list\r\n      page: 1,\r\n      currentCategory: null,\r\n      appSearchTerm: null\r\n    };\r\n\r\n    this.handleAppSearch = this.handleAppSearch.bind(this);\r\n    this.handleCategoryFilter = this.handleCategoryFilter.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // apps.json file hosted in github pages\r\n    fetch('https://tiagoportfolio.github.io/data/apps.json')\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          apps: data,\r\n          appsFound: data\r\n        })\r\n      );\r\n  }\r\n\r\n  handleCategoryFilter = category => {\r\n    this.setState((state, props) => ({\r\n      appsFound: state.apps.filter(\r\n        app =>\r\n          app.name.toLowerCase().includes(state.appSearchTerm) &&\r\n          (category ? app.categories.includes(category) : true)\r\n      ),\r\n      currentCategory: category,\r\n      page: 1\r\n    }));\r\n  };\r\n\r\n  handleAppSearch = e => {\r\n    const searchTerm = e.target.value.toLowerCase();\r\n    this.setState((state, props) => ({\r\n      appsFound: state.apps.filter(\r\n        app =>\r\n          app.name.toLowerCase().includes(searchTerm) &&\r\n          (state.currentCategory ? app.categories.includes(state.currentCategory) : true)\r\n      ),\r\n      appSearchTerm: searchTerm,\r\n      page: 1\r\n    }));\r\n  };\r\n\r\n  handlePagination = page => {\r\n    this.setState({page});\r\n  };\r\n\r\n  render() {\r\n    const {appsFound, page} = this.state;\r\n    return (\r\n      <div className=\"flex-container\">\r\n        <Categories\r\n          filterCategory={this.handleCategoryFilter}\r\n          currentCategory={this.state.currentCategory}\r\n        />\r\n        <section className=\"apps-list\">\r\n          <SearchBar searchApp={this.handleAppSearch} />\r\n          <AppsList apps={appsFound} page={page} pageLimit={PAGE_LIMIT} />\r\n          <Pagination\r\n            page={page}\r\n            totalApps={appsFound.length}\r\n            pageLimit={PAGE_LIMIT}\r\n            changePage={this.handlePagination}\r\n          />\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppsListContainer;\r\n","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles.css';\r\nimport AppsListContainer from './containers/AppsListContainer';\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return <AppsListContainer />;\r\n  }\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// TODO: Add No Result found component","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}